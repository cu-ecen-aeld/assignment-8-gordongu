#!/bin/sh

choose_group() {
    if grep -q '^staff:' /etc/group; then
        echo "staff"
    else
        echo "wheel"
    fi
}

init_scull_devices() {
    local major=$1
    local group=$2
    local mode=664 # Enable read/write permissions for owner and group and read only permissions for others

    # Remove stale device nodes and add new device nodes with correct permissions and properties
    rm -f /dev/scull[0-3]
    mknod /dev/scull0 c "$major" 0
    mknod /dev/scull1 c "$major" 1
    mknod /dev/scull2 c "$major" 2
    mknod /dev/scull3 c "$major" 3
    ln -sf scull0 /dev/scull
    chgrp "$group" /dev/scull[0-3]
    chmod "$mode" /dev/scull[0-3]

    rm -f /dev/scullpipe[0-3]
    mknod /dev/scullpipe0 c "$major" 4
    mknod /dev/scullpipe1 c "$major" 5
    mknod /dev/scullpipe2 c "$major" 6
    mknod /dev/scullpipe3 c "$major" 7
    ln -sf scullpipe0 /dev/scullpipe
    chgrp "$group" /dev/scullpipe[0-3]
    chmod "$mode" /dev/scullpipe[0-3]

    rm -f /dev/scullsingle
    mknod /dev/scullsingle c "$major" 8
    chgrp "$group" /dev/scullsingle
    chmod "$mode" /dev/scullsingle

    rm -f /dev/sculluid
    mknod /dev/sculluid c "$major" 9
    chgrp "$group" /dev/sculluid
    chmod "$mode" /dev/sculluid

    rm -f /dev/scullwuid
    mknod /dev/scullwuid c "$major" 10
    chgrp "$group" /dev/scullwuid
    chmod "$mode" /dev/scullwuid

    rm -f /dev/scullpriv
    mknod /dev/scullpriv c "$major" 11
    chgrp "$group" /dev/scullpriv
    chmod "$mode" /dev/scullpriv
}

remove_scull_devices() {
    # Remove stale device nodes
    rm -f /dev/scull /dev/scull[0-3] \
          /dev/scullpipe /dev/scullpipe[0-3] \
          /dev/scullsingle /dev/sculluid \
          /dev/scullwuid /dev/scullpriv
}

load_module() {
    # Add module to kernel or exit with error if install failed
    local name=$1
    modprobe "$name" || exit 1

    # Obtain major number to assign to device nodes
    local major=$(awk '$2=="'"$name"'" {print $1}' /proc/devices)
    [ -z "$major" ] && return

    # Handle scull device nodes install separately or remove stale device node and add new device node with correct permissions and properties
    if [ "$name" = "scull" ]; then
        init_scull_devices "$major" "$MAIN_GROUP"
    else
        rm -f /dev/"$name"
        mknod /dev/"$name" c "$major" 0
        chgrp "$MAIN_GROUP" /dev/"$name"
        chmod 664 /dev/"$name"
    fi
}

unload_module() {
    # Remove module from kernel or exit with error if removal failed
    local name=$1
    modprobe -r "$name" || exit 1

    # Handle scull device nodes removal separately or remove stale device node
    if [ "$name" = "scull" ]; then
        remove_scull_devices
    else
        rm -f /dev/"$name"
    fi
}

MAIN_GROUP=$(choose_group)

# Check if argument exists
if [ -z "$1" ]; then
    echo "Error: missing arguments"
    exit 1
fi

# Process argument and either start or stop the daemon process
case "$1" in
    start)
        load_module scull
        # load_module faulty
        # load_module hello
        ;;
    stop)
        unload_module scull
        # unload_module faulty
        # unload_module hello
        ;;
    *)
        echo "Usage: $0 [ start | stop ]"
        exit 1
        ;;
esac

exit 0
